{"version":3,"sources":["next-gm-xhr.js"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"next-gm-xhr.js","sourcesContent":["(function () {\n  var global = global || this || window || Function('return this')();\n  var nx = global.nx || require('@feizheng/next-js-core2');\n  var NxDataTransform = nx.DataTransform || require('@feizheng/next-data-transform');\n  var NxAbstractRequest = nx.AbstractRequest || require('@feizheng/next-abstract-request');\n  var nxContentType = nx.contentType || require('@feizheng/next-content-type');\n  var nxDeepAssign = nx.deepAssign || require('@feizheng/next-deep-assign');\n  var nxParam = nx.param || require('@feizheng/next-param');\n\n  var DEFAULT_OPTIONS = {\n    dataType: 'json',\n    responseType: 'json'\n  };\n\n  var NxGmXhr = nx.declare('nx.GmXhr', {\n    extends: NxAbstractRequest,\n    methods: {\n      defaults: function () {\n        return DEFAULT_OPTIONS;\n      },\n      request: function (inMethod, inUrl, inData, inOptions) {\n        var options = nx.mix(null, this.options, inOptions);\n        var isGET = inMethod === 'get';\n        var body = isGET ? null : NxDataTransform[options.dataType](inData);\n        var url = isGET ? nxParam(inData, inUrl) : inUrl;\n        var headers = { 'Content-Type': nxContentType(options.dataType) };\n        var config = nxDeepAssign({ method: inMethod, body: body, headers: headers }, options);\n\n        return new Promise(function (resolve, reject) {\n          GM_xmlhttpRequest(\n            nx.mix({\n              url: url,\n              onload: function (res) {\n                resolve(res.response);\n              },\n              onerror: function (err) {\n                reject(err);\n              },\n              ontimeout: function (err) {\n                reject(err);\n              }\n            }, config)\n          );\n        })\n      }\n    }\n  });\n\n  if (typeof module !== 'undefined' && module.exports) {\n    module.exports = NxGmXhr;\n  }\n})();\n"]}